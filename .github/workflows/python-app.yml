# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      env:
        PG_SSH_HOST: ${{ secrets.PG_SSH_HOST }}
        PG_SSH_PORT: ${{ secrets.PG_SSH_PORT }}
        PG_SSH_USER: ${{ secrets.PG_SSH_USER }}
        PG_SSH_PASSWORD: ${{ secrets.PG_SSH_PASSWORD }}
        PG_HOST: ${{ secrets.PG_HOST }}
        PG_PORT: ${{ secrets.PG_PORT }}
        PG_USER: ${{ secrets.PG_USER }}
        PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
        PG_DB: ${{ secrets.PG_DB }}
        SF_USER: ${{ secrets.SF_USER }}
        SF_PASSWORD: ${{ secrets.SF_PASSWORD }}
        SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
      run: |
        pytest
